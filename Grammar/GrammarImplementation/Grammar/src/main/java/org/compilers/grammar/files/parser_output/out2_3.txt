As production string:
<program> -> <lines>
<lines> -> <line><lines_element>
<line> -> <declaration>
<declaration> -> let<compound_declaration>;
<compound_declaration> -> <simple_declaration><compound_declaration_element>
<simple_declaration> -> <id_list>:<type>
<id_list> -> id<id_list_element>
<id_list_element> -> ε
<type> -> <simple_type><complex_type>
<simple_type> -> integer
<complex_type> -> [<array_initialisation>]
<array_initialisation> -> ε
<compound_declaration_element> -> ,<compound_declaration>
<compound_declaration> -> <simple_declaration><compound_declaration_element>
<simple_declaration> -> <id_list>:<type>
<id_list> -> id<id_list_element>
<id_list_element> -> ε
<type> -> <simple_type><complex_type>
<simple_type> -> integer
<complex_type> -> ε
<compound_declaration_element> -> ,<compound_declaration>
<compound_declaration> -> <simple_declaration><compound_declaration_element>
<simple_declaration> -> <id_list>:<type>
<id_list> -> id<id_list_element>
<id_list_element> -> ε
<type> -> <simple_type><complex_type>
<simple_type> -> integer
<complex_type> -> ε
<compound_declaration_element> -> ,<compound_declaration>
<compound_declaration> -> <simple_declaration><compound_declaration_element>
<simple_declaration> -> <id_list>:<type>
<id_list> -> id<id_list_element>
<id_list_element> -> ε
<type> -> <simple_type><complex_type>
<simple_type> -> integer
<complex_type> -> ε
<compound_declaration_element> -> ,<compound_declaration>
<compound_declaration> -> <simple_declaration><compound_declaration_element>
<simple_declaration> -> <id_list>:<type>
<id_list> -> id<id_list_element>
<id_list_element> -> ε
<type> -> <simple_type><complex_type>
<simple_type> -> integer
<complex_type> -> ε
<compound_declaration_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <simple_stmt>
<simple_stmt> -> <io_stmt>
<io_stmt> -> write(<expression_list>);
<expression_list> -> <expression><expression_list_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> const
<term_element> -> ε
<expression_element> -> ε
<expression_list_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <simple_stmt>
<simple_stmt> -> <io_stmt>
<io_stmt> -> read(<id>);
<id> -> id<array_or_not>
<array_or_not> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <simple_stmt>
<simple_stmt> -> <io_stmt>
<io_stmt> -> write(<expression_list>);
<expression_list> -> <expression><expression_list_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> const
<term_element> -> ε
<expression_element> -> ε
<expression_list_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <structured_statement>
<structured_statement> -> <for_stmt>
<for_stmt> -> for<assignment_stmt>,<c_expression>,<assignment_stmt>do<compound_stmt>
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_b_op><expression>
<assignment_b_op> -> =
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> const
<term_element> -> ε
<expression_element> -> ε
<c_expression> -> <c_term><c_expression_element>
<c_term> -> <c_factor><c_factor_element>
<c_factor> -> <condition>
<condition> -> <expression><condition_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<condition_element> -> <relational_op><expression>
<relational_op> -> <
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<c_factor_element> -> ε
<c_expression_element> -> ε
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_u_op>
<assignment_u_op> -> ++
<compound_stmt> -> begin<stmt_list>end
<stmt_list> -> <statement><stmt_list_element>
<statement> -> <simple_stmt>
<simple_stmt> -> <io_stmt>
<io_stmt> -> read(<id>);
<id> -> id<array_or_not>
<array_or_not> -> [<array_element_type>]
<array_element_type> -> id
<stmt_list_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <simple_stmt>
<simple_stmt> -> <assignment_stmt>
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_b_op><expression>
<assignment_b_op> -> =
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> [<array_element_type>]
<array_element_type> -> const
<term_element> -> ε
<expression_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <simple_stmt>
<simple_stmt> -> <assignment_stmt>
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_b_op><expression>
<assignment_b_op> -> =
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> [<array_element_type>]
<array_element_type> -> const
<term_element> -> ε
<expression_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <structured_statement>
<structured_statement> -> <for_stmt>
<for_stmt> -> for<assignment_stmt>,<c_expression>,<assignment_stmt>do<compound_stmt>
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_b_op><expression>
<assignment_b_op> -> =
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> const
<term_element> -> ε
<expression_element> -> ε
<c_expression> -> <c_term><c_expression_element>
<c_term> -> <c_factor><c_factor_element>
<c_factor> -> <condition>
<condition> -> <expression><condition_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<condition_element> -> <relational_op><expression>
<relational_op> -> <
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<c_factor_element> -> ε
<c_expression_element> -> ε
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_u_op>
<assignment_u_op> -> ++
<compound_stmt> -> begin<stmt_list>end
<stmt_list> -> <statement><stmt_list_element>
<statement> -> <structured_statement>
<structured_statement> -> <if_stmt>
<if_stmt> -> if<c_expression>then<compound_stmt><if_stmt_element>
<c_expression> -> <c_term><c_expression_element>
<c_term> -> <c_factor><c_factor_element>
<c_factor> -> <condition>
<condition> -> <expression><condition_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> [<array_element_type>]
<array_element_type> -> id
<term_element> -> ε
<expression_element> -> ε
<condition_element> -> <relational_op><expression>
<relational_op> -> <
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<c_factor_element> -> ε
<c_expression_element> -> ε
<compound_stmt> -> begin<stmt_list>end
<stmt_list> -> <statement><stmt_list_element>
<statement> -> <simple_stmt>
<simple_stmt> -> <assignment_stmt>
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_b_op><expression>
<assignment_b_op> -> =
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> [<array_element_type>]
<array_element_type> -> id
<term_element> -> ε
<expression_element> -> ε
<stmt_list_element> -> ε
<if_stmt_element> -> ε
<stmt_list_element> -> <stmt_list>
<stmt_list> -> <statement><stmt_list_element>
<statement> -> <structured_statement>
<structured_statement> -> <if_stmt>
<if_stmt> -> if<c_expression>then<compound_stmt><if_stmt_element>
<c_expression> -> <c_term><c_expression_element>
<c_term> -> <c_factor><c_factor_element>
<c_factor> -> <condition>
<condition> -> <expression><condition_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> [<array_element_type>]
<array_element_type> -> id
<term_element> -> ε
<expression_element> -> ε
<condition_element> -> <relational_op><expression>
<relational_op> -> >
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<c_factor_element> -> ε
<c_expression_element> -> ε
<compound_stmt> -> begin<stmt_list>end
<stmt_list> -> <statement><stmt_list_element>
<statement> -> <simple_stmt>
<simple_stmt> -> <assignment_stmt>
<assignment_stmt> -> <id><assignment_stmt_element>;
<id> -> id<array_or_not>
<array_or_not> -> ε
<assignment_stmt_element> -> <assignment_b_op><expression>
<assignment_b_op> -> =
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> [<array_element_type>]
<array_element_type> -> id
<term_element> -> ε
<expression_element> -> ε
<stmt_list_element> -> ε
<if_stmt_element> -> ε
<stmt_list_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <simple_stmt>
<simple_stmt> -> <io_stmt>
<io_stmt> -> write(<expression_list>);
<expression_list> -> <expression><expression_list_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> const
<term_element> -> ε
<expression_element> -> ε
<expression_list_element> -> ,<expression_list>
<expression_list> -> <expression><expression_list_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<expression_list_element> -> ε
<lines_element> -> <lines>
<lines> -> <line><lines_element>
<line> -> <statement>
<statement> -> <simple_stmt>
<simple_stmt> -> <io_stmt>
<io_stmt> -> write(<expression_list>);
<expression_list> -> <expression><expression_list_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> const
<term_element> -> ε
<expression_element> -> ε
<expression_list_element> -> ,<expression_list>
<expression_list> -> <expression><expression_list_element>
<expression> -> <term><expression_element>
<term> -> <factor><term_element>
<factor> -> <id>
<id> -> id<array_or_not>
<array_or_not> -> ε
<term_element> -> ε
<expression_element> -> ε
<expression_list_element> -> ε
<lines_element> -> ε

As derivation sequence:
[<program>]
[<lines>]
[<line>, <lines_element>]
[<declaration>, <lines_element>]
[let, <compound_declaration>, ;, <lines_element>]
[let, <simple_declaration>, <compound_declaration_element>, ;, <lines_element>]
[let, <id_list>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, <id_list_element>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, <simple_type>, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, <array_initialisation>, ], <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, <compound_declaration>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, <simple_declaration>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, <id_list>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, <id_list_element>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, <simple_type>, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, <compound_declaration>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, <simple_declaration>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, <id_list>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, <id_list_element>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, <simple_type>, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, <compound_declaration>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, <simple_declaration>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, <id_list>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, <id_list_element>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, <simple_type>, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, <compound_declaration>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, <simple_declaration>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, <id_list>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, <id_list_element>, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, <type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, <simple_type>, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, <complex_type>, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, <compound_declaration_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, <simple_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, <io_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, <expression_list>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, <expression>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, <term>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, <factor>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, <simple_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, <io_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, <id>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, <array_or_not>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, <simple_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, <io_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, <expression_list>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, <expression>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, <term>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, <factor>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, <structured_statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, <for_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, <assignment_stmt>, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, <id>, <assignment_stmt_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, <array_or_not>, <assignment_stmt_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, <assignment_stmt_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, <assignment_b_op>, <expression>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, <expression>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, <term>, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, <factor>, <term_element>, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, <term_element>, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <c_term>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <c_factor>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <condition>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <expression>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <term>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <factor>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, <id>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <array_or_not>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <relational_op>, <expression>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, <expression>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, <term>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, <factor>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, <id>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, <array_or_not>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, <id>, <assignment_stmt_element>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, <array_or_not>, <assignment_stmt_element>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, <assignment_stmt_element>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, <assignment_u_op>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <stmt_list>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <statement>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <simple_stmt>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <io_stmt>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, <id>, ), ;, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, <array_or_not>, ), ;, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, <array_element_type>, ], ), ;, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, <simple_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, <assignment_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, <id>, <assignment_stmt_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, <array_or_not>, <assignment_stmt_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, <assignment_stmt_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, <assignment_b_op>, <expression>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, <expression>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, <term>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, <factor>, <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, <id>, <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, <array_or_not>, <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, <array_element_type>, ], <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, <simple_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, <assignment_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, <id>, <assignment_stmt_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, <array_or_not>, <assignment_stmt_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, <assignment_stmt_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, <assignment_b_op>, <expression>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, <expression>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, <term>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, <factor>, <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, <id>, <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, <array_or_not>, <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, <array_element_type>, ], <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], <term_element>, <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], <expression_element>, ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, <structured_statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, <for_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, <assignment_stmt>, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, <id>, <assignment_stmt_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, <array_or_not>, <assignment_stmt_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, <assignment_stmt_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, <assignment_b_op>, <expression>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, <expression>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, <term>, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, <factor>, <term_element>, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, <term_element>, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, <expression_element>, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <c_expression>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <c_term>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <c_factor>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <condition>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <expression>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <term>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <factor>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, <id>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <array_or_not>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <condition_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <relational_op>, <expression>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, <expression>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, <term>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, <factor>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, <id>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, <array_or_not>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, <expression_element>, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, <c_factor_element>, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, <c_expression_element>, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, <assignment_stmt>, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, <id>, <assignment_stmt_element>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, <array_or_not>, <assignment_stmt_element>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, <assignment_stmt_element>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, <assignment_u_op>, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, <compound_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <stmt_list>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <statement>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <structured_statement>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, <if_stmt>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <c_expression>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <c_term>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <c_factor>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <condition>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <expression>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <term>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <factor>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, <id>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, <array_or_not>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, <array_element_type>, ], <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <relational_op>, <expression>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, <expression>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, <term>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, <factor>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, <id>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, <array_or_not>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, <stmt_list>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, <statement>, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, <simple_stmt>, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, <assignment_stmt>, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, <id>, <assignment_stmt_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, <array_or_not>, <assignment_stmt_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, <assignment_stmt_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, <assignment_b_op>, <expression>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, <expression>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, <term>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, <factor>, <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, <id>, <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, <array_or_not>, <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, <array_element_type>, ], <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, <stmt_list>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, <statement>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, <structured_statement>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, <if_stmt>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <c_expression>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <c_term>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <c_factor>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <condition>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <expression>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <term>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <factor>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, <id>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, <array_or_not>, <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, <array_element_type>, ], <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], <term_element>, <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], <expression_element>, <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], <condition_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], <relational_op>, <expression>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, <expression>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, <term>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, <factor>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, <id>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, <array_or_not>, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, <term_element>, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, <expression_element>, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, <c_factor_element>, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, <c_expression_element>, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, <compound_stmt>, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, <stmt_list>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, <statement>, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, <simple_stmt>, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, <assignment_stmt>, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, <id>, <assignment_stmt_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, <array_or_not>, <assignment_stmt_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, <assignment_stmt_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, <assignment_b_op>, <expression>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, <expression>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, <term>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, <factor>, <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, <id>, <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, <array_or_not>, <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, <array_element_type>, ], <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], <term_element>, <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], <expression_element>, ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, <stmt_list_element>, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, <if_stmt_element>, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, <stmt_list_element>, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, <simple_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, <io_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, <expression_list>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, <expression>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, <term>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, <factor>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, <expression_list>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, <expression>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, <term>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, <factor>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, <id>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, <array_or_not>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, <lines>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, <line>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, <statement>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, <simple_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, <io_stmt>, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, <expression_list>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, <expression>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, <term>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, <factor>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, <expression_list>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, <expression>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, <term>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, <factor>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, <id>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, id, <array_or_not>, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, id, <term_element>, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, id, <expression_element>, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, id, <expression_list_element>, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, id, ), ;, <lines_element>]
[let, id, :, integer, [, ], ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ,, id, :, integer, ;, write, (, const, ), ;, read, (, id, ), ;, write, (, const, ), ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, read, (, id, [, id, ], ), ;, end, id, =, id, [, const, ], ;, id, =, id, [, const, ], ;, for, id, =, const, ;, ,, id, <, id, ,, id, ++, ;, do, begin, if, id, [, id, ], <, id, then, begin, id, =, id, [, id, ], ;, end, if, id, [, id, ], >, id, then, begin, id, =, id, [, id, ], ;, end, end, write, (, const, ,, id, ), ;, write, (, const, ,, id, ), ;]

As father-sibling table:
Index                | Info                 | Parent               | Right sibling       
0                    | <program>                 | -1                        | -1                       
1                    | <lines>                   | 0                         | -1                       
2                    | <line>                    | 1                         | -1                       
3                    | <lines_element>           | 1                         | 2                        
4                    | <declaration>             | 2                         | -1                       
5                    | let                       | 4                         | -1                       
6                    | <compound_declaration>    | 4                         | 5                        
7                    | ;                         | 4                         | 6                        
8                    | <simple_declaration>      | 6                         | -1                       
9                    | <compound_declaration_element> | 6                         | 8                        
10                   | <id_list>                 | 8                         | -1                       
11                   | :                         | 8                         | 10                       
12                   | <type>                    | 8                         | 11                       
13                   | id                        | 10                        | -1                       
14                   | <id_list_element>         | 10                        | 13                       
15                   | <simple_type>             | 12                        | -1                       
16                   | <complex_type>            | 12                        | 15                       
17                   | integer                   | 15                        | -1                       
18                   | [                         | 16                        | -1                       
19                   | <array_initialisation>    | 16                        | 18                       
20                   | ]                         | 16                        | 19                       
21                   | ,                         | 9                         | -1                       
22                   | <compound_declaration>    | 9                         | 21                       
23                   | <simple_declaration>      | 22                        | -1                       
24                   | <compound_declaration_element> | 22                        | 23                       
25                   | <id_list>                 | 23                        | -1                       
26                   | :                         | 23                        | 25                       
27                   | <type>                    | 23                        | 26                       
28                   | id                        | 25                        | -1                       
29                   | <id_list_element>         | 25                        | 28                       
30                   | <simple_type>             | 27                        | -1                       
31                   | <complex_type>            | 27                        | 30                       
32                   | integer                   | 30                        | -1                       
33                   | ,                         | 24                        | -1                       
34                   | <compound_declaration>    | 24                        | 33                       
35                   | <simple_declaration>      | 34                        | -1                       
36                   | <compound_declaration_element> | 34                        | 35                       
37                   | <id_list>                 | 35                        | -1                       
38                   | :                         | 35                        | 37                       
39                   | <type>                    | 35                        | 38                       
40                   | id                        | 37                        | -1                       
41                   | <id_list_element>         | 37                        | 40                       
42                   | <simple_type>             | 39                        | -1                       
43                   | <complex_type>            | 39                        | 42                       
44                   | integer                   | 42                        | -1                       
45                   | ,                         | 36                        | -1                       
46                   | <compound_declaration>    | 36                        | 45                       
47                   | <simple_declaration>      | 46                        | -1                       
48                   | <compound_declaration_element> | 46                        | 47                       
49                   | <id_list>                 | 47                        | -1                       
50                   | :                         | 47                        | 49                       
51                   | <type>                    | 47                        | 50                       
52                   | id                        | 49                        | -1                       
53                   | <id_list_element>         | 49                        | 52                       
54                   | <simple_type>             | 51                        | -1                       
55                   | <complex_type>            | 51                        | 54                       
56                   | integer                   | 54                        | -1                       
57                   | ,                         | 48                        | -1                       
58                   | <compound_declaration>    | 48                        | 57                       
59                   | <simple_declaration>      | 58                        | -1                       
60                   | <compound_declaration_element> | 58                        | 59                       
61                   | <id_list>                 | 59                        | -1                       
62                   | :                         | 59                        | 61                       
63                   | <type>                    | 59                        | 62                       
64                   | id                        | 61                        | -1                       
65                   | <id_list_element>         | 61                        | 64                       
66                   | <simple_type>             | 63                        | -1                       
67                   | <complex_type>            | 63                        | 66                       
68                   | integer                   | 66                        | -1                       
69                   | <lines>                   | 3                         | -1                       
70                   | <line>                    | 69                        | -1                       
71                   | <lines_element>           | 69                        | 70                       
72                   | <statement>               | 70                        | -1                       
73                   | <simple_stmt>             | 72                        | -1                       
74                   | <io_stmt>                 | 73                        | -1                       
75                   | write                     | 74                        | -1                       
76                   | (                         | 74                        | 75                       
77                   | <expression_list>         | 74                        | 76                       
78                   | )                         | 74                        | 77                       
79                   | ;                         | 74                        | 78                       
80                   | <expression>              | 77                        | -1                       
81                   | <expression_list_element> | 77                        | 80                       
82                   | <term>                    | 80                        | -1                       
83                   | <expression_element>      | 80                        | 82                       
84                   | <factor>                  | 82                        | -1                       
85                   | <term_element>            | 82                        | 84                       
86                   | const                     | 84                        | -1                       
87                   | <lines>                   | 71                        | -1                       
88                   | <line>                    | 87                        | -1                       
89                   | <lines_element>           | 87                        | 88                       
90                   | <statement>               | 88                        | -1                       
91                   | <simple_stmt>             | 90                        | -1                       
92                   | <io_stmt>                 | 91                        | -1                       
93                   | read                      | 92                        | -1                       
94                   | (                         | 92                        | 93                       
95                   | <id>                      | 92                        | 94                       
96                   | )                         | 92                        | 95                       
97                   | ;                         | 92                        | 96                       
98                   | id                        | 95                        | -1                       
99                   | <array_or_not>            | 95                        | 98                       
100                  | <lines>                   | 89                        | -1                       
101                  | <line>                    | 100                       | -1                       
102                  | <lines_element>           | 100                       | 101                      
103                  | <statement>               | 101                       | -1                       
104                  | <simple_stmt>             | 103                       | -1                       
105                  | <io_stmt>                 | 104                       | -1                       
106                  | write                     | 105                       | -1                       
107                  | (                         | 105                       | 106                      
108                  | <expression_list>         | 105                       | 107                      
109                  | )                         | 105                       | 108                      
110                  | ;                         | 105                       | 109                      
111                  | <expression>              | 108                       | -1                       
112                  | <expression_list_element> | 108                       | 111                      
113                  | <term>                    | 111                       | -1                       
114                  | <expression_element>      | 111                       | 113                      
115                  | <factor>                  | 113                       | -1                       
116                  | <term_element>            | 113                       | 115                      
117                  | const                     | 115                       | -1                       
118                  | <lines>                   | 102                       | -1                       
119                  | <line>                    | 118                       | -1                       
120                  | <lines_element>           | 118                       | 119                      
121                  | <statement>               | 119                       | -1                       
122                  | <structured_statement>    | 121                       | -1                       
123                  | <for_stmt>                | 122                       | -1                       
124                  | for                       | 123                       | -1                       
125                  | <assignment_stmt>         | 123                       | 124                      
126                  | ,                         | 123                       | 125                      
127                  | <c_expression>            | 123                       | 126                      
128                  | ,                         | 123                       | 127                      
129                  | <assignment_stmt>         | 123                       | 128                      
130                  | do                        | 123                       | 129                      
131                  | <compound_stmt>           | 123                       | 130                      
132                  | <id>                      | 125                       | -1                       
133                  | <assignment_stmt_element> | 125                       | 132                      
134                  | ;                         | 125                       | 133                      
135                  | id                        | 132                       | -1                       
136                  | <array_or_not>            | 132                       | 135                      
137                  | <assignment_b_op>         | 133                       | -1                       
138                  | <expression>              | 133                       | 137                      
139                  | =                         | 137                       | -1                       
140                  | <term>                    | 138                       | -1                       
141                  | <expression_element>      | 138                       | 140                      
142                  | <factor>                  | 140                       | -1                       
143                  | <term_element>            | 140                       | 142                      
144                  | const                     | 142                       | -1                       
145                  | <c_term>                  | 127                       | -1                       
146                  | <c_expression_element>    | 127                       | 145                      
147                  | <c_factor>                | 145                       | -1                       
148                  | <c_factor_element>        | 145                       | 147                      
149                  | <condition>               | 147                       | -1                       
150                  | <expression>              | 149                       | -1                       
151                  | <condition_element>       | 149                       | 150                      
152                  | <term>                    | 150                       | -1                       
153                  | <expression_element>      | 150                       | 152                      
154                  | <factor>                  | 152                       | -1                       
155                  | <term_element>            | 152                       | 154                      
156                  | <id>                      | 154                       | -1                       
157                  | id                        | 156                       | -1                       
158                  | <array_or_not>            | 156                       | 157                      
159                  | <relational_op>           | 151                       | -1                       
160                  | <expression>              | 151                       | 159                      
161                  | <                         | 159                       | -1                       
162                  | <term>                    | 160                       | -1                       
163                  | <expression_element>      | 160                       | 162                      
164                  | <factor>                  | 162                       | -1                       
165                  | <term_element>            | 162                       | 164                      
166                  | <id>                      | 164                       | -1                       
167                  | id                        | 166                       | -1                       
168                  | <array_or_not>            | 166                       | 167                      
169                  | <id>                      | 129                       | -1                       
170                  | <assignment_stmt_element> | 129                       | 169                      
171                  | ;                         | 129                       | 170                      
172                  | id                        | 169                       | -1                       
173                  | <array_or_not>            | 169                       | 172                      
174                  | <assignment_u_op>         | 170                       | -1                       
175                  | ++                        | 174                       | -1                       
176                  | begin                     | 131                       | -1                       
177                  | <stmt_list>               | 131                       | 176                      
178                  | end                       | 131                       | 177                      
179                  | <statement>               | 177                       | -1                       
180                  | <stmt_list_element>       | 177                       | 179                      
181                  | <simple_stmt>             | 179                       | -1                       
182                  | <io_stmt>                 | 181                       | -1                       
183                  | read                      | 182                       | -1                       
184                  | (                         | 182                       | 183                      
185                  | <id>                      | 182                       | 184                      
186                  | )                         | 182                       | 185                      
187                  | ;                         | 182                       | 186                      
188                  | id                        | 185                       | -1                       
189                  | <array_or_not>            | 185                       | 188                      
190                  | [                         | 189                       | -1                       
191                  | <array_element_type>      | 189                       | 190                      
192                  | ]                         | 189                       | 191                      
193                  | id                        | 191                       | -1                       
194                  | <lines>                   | 120                       | -1                       
195                  | <line>                    | 194                       | -1                       
196                  | <lines_element>           | 194                       | 195                      
197                  | <statement>               | 195                       | -1                       
198                  | <simple_stmt>             | 197                       | -1                       
199                  | <assignment_stmt>         | 198                       | -1                       
200                  | <id>                      | 199                       | -1                       
201                  | <assignment_stmt_element> | 199                       | 200                      
202                  | ;                         | 199                       | 201                      
203                  | id                        | 200                       | -1                       
204                  | <array_or_not>            | 200                       | 203                      
205                  | <assignment_b_op>         | 201                       | -1                       
206                  | <expression>              | 201                       | 205                      
207                  | =                         | 205                       | -1                       
208                  | <term>                    | 206                       | -1                       
209                  | <expression_element>      | 206                       | 208                      
210                  | <factor>                  | 208                       | -1                       
211                  | <term_element>            | 208                       | 210                      
212                  | <id>                      | 210                       | -1                       
213                  | id                        | 212                       | -1                       
214                  | <array_or_not>            | 212                       | 213                      
215                  | [                         | 214                       | -1                       
216                  | <array_element_type>      | 214                       | 215                      
217                  | ]                         | 214                       | 216                      
218                  | const                     | 216                       | -1                       
219                  | <lines>                   | 196                       | -1                       
220                  | <line>                    | 219                       | -1                       
221                  | <lines_element>           | 219                       | 220                      
222                  | <statement>               | 220                       | -1                       
223                  | <simple_stmt>             | 222                       | -1                       
224                  | <assignment_stmt>         | 223                       | -1                       
225                  | <id>                      | 224                       | -1                       
226                  | <assignment_stmt_element> | 224                       | 225                      
227                  | ;                         | 224                       | 226                      
228                  | id                        | 225                       | -1                       
229                  | <array_or_not>            | 225                       | 228                      
230                  | <assignment_b_op>         | 226                       | -1                       
231                  | <expression>              | 226                       | 230                      
232                  | =                         | 230                       | -1                       
233                  | <term>                    | 231                       | -1                       
234                  | <expression_element>      | 231                       | 233                      
235                  | <factor>                  | 233                       | -1                       
236                  | <term_element>            | 233                       | 235                      
237                  | <id>                      | 235                       | -1                       
238                  | id                        | 237                       | -1                       
239                  | <array_or_not>            | 237                       | 238                      
240                  | [                         | 239                       | -1                       
241                  | <array_element_type>      | 239                       | 240                      
242                  | ]                         | 239                       | 241                      
243                  | const                     | 241                       | -1                       
244                  | <lines>                   | 221                       | -1                       
245                  | <line>                    | 244                       | -1                       
246                  | <lines_element>           | 244                       | 245                      
247                  | <statement>               | 245                       | -1                       
248                  | <structured_statement>    | 247                       | -1                       
249                  | <for_stmt>                | 248                       | -1                       
250                  | for                       | 249                       | -1                       
251                  | <assignment_stmt>         | 249                       | 250                      
252                  | ,                         | 249                       | 251                      
253                  | <c_expression>            | 249                       | 252                      
254                  | ,                         | 249                       | 253                      
255                  | <assignment_stmt>         | 249                       | 254                      
256                  | do                        | 249                       | 255                      
257                  | <compound_stmt>           | 249                       | 256                      
258                  | <id>                      | 251                       | -1                       
259                  | <assignment_stmt_element> | 251                       | 258                      
260                  | ;                         | 251                       | 259                      
261                  | id                        | 258                       | -1                       
262                  | <array_or_not>            | 258                       | 261                      
263                  | <assignment_b_op>         | 259                       | -1                       
264                  | <expression>              | 259                       | 263                      
265                  | =                         | 263                       | -1                       
266                  | <term>                    | 264                       | -1                       
267                  | <expression_element>      | 264                       | 266                      
268                  | <factor>                  | 266                       | -1                       
269                  | <term_element>            | 266                       | 268                      
270                  | const                     | 268                       | -1                       
271                  | <c_term>                  | 253                       | -1                       
272                  | <c_expression_element>    | 253                       | 271                      
273                  | <c_factor>                | 271                       | -1                       
274                  | <c_factor_element>        | 271                       | 273                      
275                  | <condition>               | 273                       | -1                       
276                  | <expression>              | 275                       | -1                       
277                  | <condition_element>       | 275                       | 276                      
278                  | <term>                    | 276                       | -1                       
279                  | <expression_element>      | 276                       | 278                      
280                  | <factor>                  | 278                       | -1                       
281                  | <term_element>            | 278                       | 280                      
282                  | <id>                      | 280                       | -1                       
283                  | id                        | 282                       | -1                       
284                  | <array_or_not>            | 282                       | 283                      
285                  | <relational_op>           | 277                       | -1                       
286                  | <expression>              | 277                       | 285                      
287                  | <                         | 285                       | -1                       
288                  | <term>                    | 286                       | -1                       
289                  | <expression_element>      | 286                       | 288                      
290                  | <factor>                  | 288                       | -1                       
291                  | <term_element>            | 288                       | 290                      
292                  | <id>                      | 290                       | -1                       
293                  | id                        | 292                       | -1                       
294                  | <array_or_not>            | 292                       | 293                      
295                  | <id>                      | 255                       | -1                       
296                  | <assignment_stmt_element> | 255                       | 295                      
297                  | ;                         | 255                       | 296                      
298                  | id                        | 295                       | -1                       
299                  | <array_or_not>            | 295                       | 298                      
300                  | <assignment_u_op>         | 296                       | -1                       
301                  | ++                        | 300                       | -1                       
302                  | begin                     | 257                       | -1                       
303                  | <stmt_list>               | 257                       | 302                      
304                  | end                       | 257                       | 303                      
305                  | <statement>               | 303                       | -1                       
306                  | <stmt_list_element>       | 303                       | 305                      
307                  | <structured_statement>    | 305                       | -1                       
308                  | <if_stmt>                 | 307                       | -1                       
309                  | if                        | 308                       | -1                       
310                  | <c_expression>            | 308                       | 309                      
311                  | then                      | 308                       | 310                      
312                  | <compound_stmt>           | 308                       | 311                      
313                  | <if_stmt_element>         | 308                       | 312                      
314                  | <c_term>                  | 310                       | -1                       
315                  | <c_expression_element>    | 310                       | 314                      
316                  | <c_factor>                | 314                       | -1                       
317                  | <c_factor_element>        | 314                       | 316                      
318                  | <condition>               | 316                       | -1                       
319                  | <expression>              | 318                       | -1                       
320                  | <condition_element>       | 318                       | 319                      
321                  | <term>                    | 319                       | -1                       
322                  | <expression_element>      | 319                       | 321                      
323                  | <factor>                  | 321                       | -1                       
324                  | <term_element>            | 321                       | 323                      
325                  | <id>                      | 323                       | -1                       
326                  | id                        | 325                       | -1                       
327                  | <array_or_not>            | 325                       | 326                      
328                  | [                         | 327                       | -1                       
329                  | <array_element_type>      | 327                       | 328                      
330                  | ]                         | 327                       | 329                      
331                  | id                        | 329                       | -1                       
332                  | <relational_op>           | 320                       | -1                       
333                  | <expression>              | 320                       | 332                      
334                  | <                         | 332                       | -1                       
335                  | <term>                    | 333                       | -1                       
336                  | <expression_element>      | 333                       | 335                      
337                  | <factor>                  | 335                       | -1                       
338                  | <term_element>            | 335                       | 337                      
339                  | <id>                      | 337                       | -1                       
340                  | id                        | 339                       | -1                       
341                  | <array_or_not>            | 339                       | 340                      
342                  | begin                     | 312                       | -1                       
343                  | <stmt_list>               | 312                       | 342                      
344                  | end                       | 312                       | 343                      
345                  | <statement>               | 343                       | -1                       
346                  | <stmt_list_element>       | 343                       | 345                      
347                  | <simple_stmt>             | 345                       | -1                       
348                  | <assignment_stmt>         | 347                       | -1                       
349                  | <id>                      | 348                       | -1                       
350                  | <assignment_stmt_element> | 348                       | 349                      
351                  | ;                         | 348                       | 350                      
352                  | id                        | 349                       | -1                       
353                  | <array_or_not>            | 349                       | 352                      
354                  | <assignment_b_op>         | 350                       | -1                       
355                  | <expression>              | 350                       | 354                      
356                  | =                         | 354                       | -1                       
357                  | <term>                    | 355                       | -1                       
358                  | <expression_element>      | 355                       | 357                      
359                  | <factor>                  | 357                       | -1                       
360                  | <term_element>            | 357                       | 359                      
361                  | <id>                      | 359                       | -1                       
362                  | id                        | 361                       | -1                       
363                  | <array_or_not>            | 361                       | 362                      
364                  | [                         | 363                       | -1                       
365                  | <array_element_type>      | 363                       | 364                      
366                  | ]                         | 363                       | 365                      
367                  | id                        | 365                       | -1                       
368                  | <stmt_list>               | 306                       | -1                       
369                  | <statement>               | 368                       | -1                       
370                  | <stmt_list_element>       | 368                       | 369                      
371                  | <structured_statement>    | 369                       | -1                       
372                  | <if_stmt>                 | 371                       | -1                       
373                  | if                        | 372                       | -1                       
374                  | <c_expression>            | 372                       | 373                      
375                  | then                      | 372                       | 374                      
376                  | <compound_stmt>           | 372                       | 375                      
377                  | <if_stmt_element>         | 372                       | 376                      
378                  | <c_term>                  | 374                       | -1                       
379                  | <c_expression_element>    | 374                       | 378                      
380                  | <c_factor>                | 378                       | -1                       
381                  | <c_factor_element>        | 378                       | 380                      
382                  | <condition>               | 380                       | -1                       
383                  | <expression>              | 382                       | -1                       
384                  | <condition_element>       | 382                       | 383                      
385                  | <term>                    | 383                       | -1                       
386                  | <expression_element>      | 383                       | 385                      
387                  | <factor>                  | 385                       | -1                       
388                  | <term_element>            | 385                       | 387                      
389                  | <id>                      | 387                       | -1                       
390                  | id                        | 389                       | -1                       
391                  | <array_or_not>            | 389                       | 390                      
392                  | [                         | 391                       | -1                       
393                  | <array_element_type>      | 391                       | 392                      
394                  | ]                         | 391                       | 393                      
395                  | id                        | 393                       | -1                       
396                  | <relational_op>           | 384                       | -1                       
397                  | <expression>              | 384                       | 396                      
398                  | >                         | 396                       | -1                       
399                  | <term>                    | 397                       | -1                       
400                  | <expression_element>      | 397                       | 399                      
401                  | <factor>                  | 399                       | -1                       
402                  | <term_element>            | 399                       | 401                      
403                  | <id>                      | 401                       | -1                       
404                  | id                        | 403                       | -1                       
405                  | <array_or_not>            | 403                       | 404                      
406                  | begin                     | 376                       | -1                       
407                  | <stmt_list>               | 376                       | 406                      
408                  | end                       | 376                       | 407                      
409                  | <statement>               | 407                       | -1                       
410                  | <stmt_list_element>       | 407                       | 409                      
411                  | <simple_stmt>             | 409                       | -1                       
412                  | <assignment_stmt>         | 411                       | -1                       
413                  | <id>                      | 412                       | -1                       
414                  | <assignment_stmt_element> | 412                       | 413                      
415                  | ;                         | 412                       | 414                      
416                  | id                        | 413                       | -1                       
417                  | <array_or_not>            | 413                       | 416                      
418                  | <assignment_b_op>         | 414                       | -1                       
419                  | <expression>              | 414                       | 418                      
420                  | =                         | 418                       | -1                       
421                  | <term>                    | 419                       | -1                       
422                  | <expression_element>      | 419                       | 421                      
423                  | <factor>                  | 421                       | -1                       
424                  | <term_element>            | 421                       | 423                      
425                  | <id>                      | 423                       | -1                       
426                  | id                        | 425                       | -1                       
427                  | <array_or_not>            | 425                       | 426                      
428                  | [                         | 427                       | -1                       
429                  | <array_element_type>      | 427                       | 428                      
430                  | ]                         | 427                       | 429                      
431                  | id                        | 429                       | -1                       
432                  | <lines>                   | 246                       | -1                       
433                  | <line>                    | 432                       | -1                       
434                  | <lines_element>           | 432                       | 433                      
435                  | <statement>               | 433                       | -1                       
436                  | <simple_stmt>             | 435                       | -1                       
437                  | <io_stmt>                 | 436                       | -1                       
438                  | write                     | 437                       | -1                       
439                  | (                         | 437                       | 438                      
440                  | <expression_list>         | 437                       | 439                      
441                  | )                         | 437                       | 440                      
442                  | ;                         | 437                       | 441                      
443                  | <expression>              | 440                       | -1                       
444                  | <expression_list_element> | 440                       | 443                      
445                  | <term>                    | 443                       | -1                       
446                  | <expression_element>      | 443                       | 445                      
447                  | <factor>                  | 445                       | -1                       
448                  | <term_element>            | 445                       | 447                      
449                  | const                     | 447                       | -1                       
450                  | ,                         | 444                       | -1                       
451                  | <expression_list>         | 444                       | 450                      
452                  | <expression>              | 451                       | -1                       
453                  | <expression_list_element> | 451                       | 452                      
454                  | <term>                    | 452                       | -1                       
455                  | <expression_element>      | 452                       | 454                      
456                  | <factor>                  | 454                       | -1                       
457                  | <term_element>            | 454                       | 456                      
458                  | <id>                      | 456                       | -1                       
459                  | id                        | 458                       | -1                       
460                  | <array_or_not>            | 458                       | 459                      
461                  | <lines>                   | 434                       | -1                       
462                  | <line>                    | 461                       | -1                       
463                  | <lines_element>           | 461                       | 462                      
464                  | <statement>               | 462                       | -1                       
465                  | <simple_stmt>             | 464                       | -1                       
466                  | <io_stmt>                 | 465                       | -1                       
467                  | write                     | 466                       | -1                       
468                  | (                         | 466                       | 467                      
469                  | <expression_list>         | 466                       | 468                      
470                  | )                         | 466                       | 469                      
471                  | ;                         | 466                       | 470                      
472                  | <expression>              | 469                       | -1                       
473                  | <expression_list_element> | 469                       | 472                      
474                  | <term>                    | 472                       | -1                       
475                  | <expression_element>      | 472                       | 474                      
476                  | <factor>                  | 474                       | -1                       
477                  | <term_element>            | 474                       | 476                      
478                  | const                     | 476                       | -1                       
479                  | ,                         | 473                       | -1                       
480                  | <expression_list>         | 473                       | 479                      
481                  | <expression>              | 480                       | -1                       
482                  | <expression_list_element> | 480                       | 481                      
483                  | <term>                    | 481                       | -1                       
484                  | <expression_element>      | 481                       | 483                      
485                  | <factor>                  | 483                       | -1                       
486                  | <term_element>            | 483                       | 485                      
487                  | <id>                      | 485                       | -1                       
488                  | id                        | 487                       | -1                       
489                  | <array_or_not>            | 487                       | 488                      
