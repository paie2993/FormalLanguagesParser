let # (-1, -1)
id # (26, 0)
: # (-1, -1)
integer # (-1, -1)
, # (-1, -1)
id # (6, 0)
: # (-1, -1)
integer # (-1, -1)
, # (-1, -1)
id # (34, 0)
: # (-1, -1)
integer # (-1, -1)
; # (-1, -1)
write # (-1, -1)
( # (-1, -1)
const # (18, 0)
) # (-1, -1)
; # (-1, -1)
read # (-1, -1)
( # (-1, -1)
id # (26, 0)
) # (-1, -1)
; # (-1, -1)
if # (-1, -1)
id # (26, 0)
< # (-1, -1)
const # (3, 0)
or # (-1, -1)
id # (26, 0)
> # (-1, -1)
const # (3, 0)
and # (-1, -1)
id # (26, 0)
% # (-1, -1)
const # (3, 0)
is # (-1, -1)
const # (1, 0)
then # (-1, -1)
begin # (-1, -1)
write # (-1, -1)
( # (-1, -1)
const # (23, 0)
) # (-1, -1)
; # (-1, -1)
end # (-1, -1)
else # (-1, -1)
begin # (-1, -1)
id # (34, 0)
= # (-1, -1)
const # (2, 0)
; # (-1, -1)
for # (-1, -1)
id # (6, 0)
= # (-1, -1)
const # (4, 0)
; # (-1, -1)
, # (-1, -1)
id # (6, 0)
* # (-1, -1)
id # (6, 0)
<= # (-1, -1)
id # (26, 0)
, # (-1, -1)
id # (6, 0)
+= # (-1, -1)
const # (3, 0)
; # (-1, -1)
do # (-1, -1)
begin # (-1, -1)
if # (-1, -1)
id # (26, 0)
% # (-1, -1)
id # (6, 0)
is # (-1, -1)
const # (1, 0)
then # (-1, -1)
begin # (-1, -1)
id # (34, 0)
= # (-1, -1)
const # (1, 0)
; # (-1, -1)
end # (-1, -1)
end # (-1, -1)
if # (-1, -1)
id # (34, 0)
is # (-1, -1)
const # (2, 0)
then # (-1, -1)
begin # (-1, -1)
write # (-1, -1)
( # (-1, -1)
const # (30, 0)
) # (-1, -1)
; # (-1, -1)
end # (-1, -1)
else # (-1, -1)
begin # (-1, -1)
write # (-1, -1)
( # (-1, -1)
const # (23, 0)
) # (-1, -1)
; # (-1, -1)
end # (-1, -1)
end # (-1, -1)